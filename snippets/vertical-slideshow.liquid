{%- doc -%}
  Renders a vertical slideshow component.
  Similar to zoom-dialog functionality but for regular slideshow content.
  Images are stacked vertically and controlled by thumbnails.

  @param {object[]} slides - the slides of the slideshow
  @param {string} [ref] - the ref of the slideshow component
  @param {string} [class] - HTML class attribute of the slideshow component
  @param {string} [style] - HTML style attribute of the slideshow component
  @param {number} [slide_count] - the total number of slides
  @param {string} [attributes] - Additional attributes to add to the slideshow component
  @param {boolean} [show_thumbnails] - whether to show thumbnail navigation

  @example
  {% render 'vertical-slideshow', slides: slides, slide_count: collection.products.size, ref: 'verticalSlideshow' %}
{%- enddoc -%}

{% assign class = class | strip %}
{% assign style = style | strip %}

{% stylesheet %}
    .vertical-slideshow {
    display: flex;
    height: calc(100vh - var(--header-group-height, 0px));
    max-height: calc(100vh - var(--header-group-height, 0px));
    overflow: hidden;
    }

    .vertical-slideshow__container {
    display: flex;
    width: 100%;
    height: 100%;
    gap: 1rem;
    }

    .vertical-slideshow__media {
    flex: 1;
    overflow-y: auto;
    scroll-behavior: smooth;
    scroll-snap-type: y mandatory;
    -webkit-overflow-scrolling: touch;
    }

    .vertical-slideshow__media > * {
    scroll-snap-align: center;
    scroll-snap-stop: always;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    }

    .vertical-slideshow__media > *:first-child {
    scroll-snap-align: start;
    }

    .vertical-slideshow__media > *:last-child {
    scroll-snap-align: end;
    }

    .vertical-slideshow__thumbnails {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1rem 0;
    width: 80px;
    flex-shrink: 0;
    overflow-y: auto;
    scroll-behavior: smooth;
    }

    .vertical-slideshow__thumbnail {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    border: 2px solid transparent;
    border-radius: 4px;
    background: #f8f9fa;
    cursor: pointer;
    transition: border-color 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    }

    .vertical-slideshow__thumbnail:hover {
    border-color: #dee2e6;
    }

    .vertical-slideshow__thumbnail[aria-selected="true"] {
    border-color: #007bff;
    background: #e3f2fd;
    }

    .vertical-slideshow__thumbnail:focus {
    outline: 2px solid #007bff;
    outline-offset: 2px;
    }

    .vertical-slideshow__thumbnail-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 2px;
    }

    /* Mobile responsive styles */
    @media (max-width: 768px) {
    .vertical-slideshow {
        flex-direction: column;
        height: auto;
        max-height: none;
    }
    
    .vertical-slideshow__container {
        flex-direction: column;
        height: auto;
    }
    
     .vertical-slideshow__media {
         height: calc(70vh - var(--header-group-height, 0px));
         min-height: 400px;
     }
    
    .vertical-slideshow__media > * {
        min-height: 70vh;
    }
    
    .vertical-slideshow__thumbnails {
        flex-direction: row;
        width: 100%;
        height: 80px;
        padding: 0.5rem 1rem;
        overflow-x: auto;
        overflow-y: hidden;
        gap: 0.5rem;
    }
    
    .vertical-slideshow__thumbnail {
        width: 60px;
        height: 60px;
        flex-shrink: 0;
    }
    }

    @media (prefers-reduced-motion: reduce) {
    .vertical-slideshow__media {
        scroll-behavior: auto;
    }
    
    .vertical-slideshow__thumbnails {
        scroll-behavior: auto;
    }
    }

    /* High contrast mode support */
    @media (prefers-contrast: more) {
    .vertical-slideshow__thumbnail {
        border-width: 3px;
    }
    
    .vertical-slideshow__thumbnail[aria-selected="true"] {
        border-color: #000000;
        background: #ffffff;
    }
    
    .vertical-slideshow__thumbnail:focus {
        outline-color: #000000;
    }
    }

{% endstylesheet %}

<vertical-slideshow-component
  {% if ref != blank %}
    ref="{{ ref }}"
  {% endif %}
  {% if class != blank %}
    class="vertical-slideshow {{ class }}"
  {% else %}
    class="vertical-slideshow"
  {% endif %}
  style="{{ style }}"
  {{ attributes }}
>
  <div class="vertical-slideshow__container">
    <div class="vertical-slideshow__media" ref="mediaContainer">
      {{ slides }}
    </div>
    
    {% if show_thumbnails != false and slide_count > 1 %}
      <div class="vertical-slideshow__thumbnails" ref="thumbnails">
        {% for slide in (1..slide_count) %}
          <button
            type="button"
            class="vertical-slideshow__thumbnail"
            {% if forloop.first %}
              aria-selected="true"
            {% else %}
              aria-selected="false"
            {% endif %}
            data-index="{{ forloop.index0 }}"
            aria-label="View slide {{ forloop.index }}"
          >
            {%- comment -%} Thumbnail content will be populated by JavaScript {%- endcomment -%}
          </button>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</vertical-slideshow-component>
